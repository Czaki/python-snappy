name: PyPi wheel and sdist

on: [push]

jobs:
  sdist:
    runs-on: ubuntu-latest

    name: Python 3.9

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64

      - name: Install test dependencies
        run: pip install wheel flake8 pytest

      - name: Flake8
        # stop the build if there are Python syntax errors or undefined names
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        run: |
          flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Install libsnappy-dev
        run: sudo apt-get install libsnappy-dev

      - name: Generate source distribution
        run: python setup.py sdist

      - name: Install python-snappy sdist
        run: pip install dist/python-snappy*.tar.gz

      - name: Pytest
        run: pytest --verbose test_snappy.py

      - name: Archive sdist
        if: startsWith(github.ref, 'refs/tags/0.')
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/python-snappy*.tar.gz

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest] # windows-latest

    name: Python ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y
        
      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.8.0

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env: 
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "python -m pytest --verbose {project}/test_snappy.py"
          CIBW_BEFORE_ALL_LINUX: yum install -y snappy-devel
          CIBW_BEFORE_ALL: "bash {project}/build_snappy.sh"
          MACOSX_DEPLOYMENT_TARGET: "10.9"
          CIBW_SKIP: "*2*win*"
          CIBW_ENVIRONMENT_WINDOWS: INCLUDE="C:/Program Files (x86)/Snappy/include":$INCLUDE

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          name: wheels

  upload:
    runs-on: ubuntu-latest
    name: upload wheels
    needs: ['sdist', 'build']
    if: startsWith(github.ref, 'refs/tags/0.')
    steps:
      - name: Download test data
        uses: actions/download-artifact@v1
        with:
          name: wheels
      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*.whl
